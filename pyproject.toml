[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "oopstracker"
dynamic = ["version"]
description = "AI Agent Code Loop Detection and Prevention Library"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "EvoCode Team", email = "info@evocoder.ai"},
]
keywords = [
    "llm-agent",
    "code-similarity",
    "memory-augmented-agent", 
    "autocoding-loop-prevention",
    "sqlite-memory",
    "ast-analysis"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.12"
dependencies = [
    "simhash>=2.0.0",
    "fastapi>=0.116.0",
    "uvicorn>=0.33.0",
    "xxhash>=3.4.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "sqlalchemy>=2.0.0",
    "aiosqlite>=0.19.0",
    "httpx>=0.24.0",
    "python-dotenv>=1.0.0",
    "numpy>=1.24.0",
    "llm-providers @ file:///home/coding/code-smith/util/llm-providers",
    "tqdm>=4.65.0",
    "colorama>=0.4.6",
    "intent-tree @ file:///home/coding/code-smith/code-generation/intent/intent_tree",
    "intent-unified @ file:///home/coding/code-smith/code-generation/intent/intent-unified",
    "evocraft-logging @ file:///home/coding/code-smith/util/logging/evocraft-logging",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]
api = [
    "fastapi>=0.104.0",
    "uvicorn>=0.24.0",
]
faiss = [
    "faiss-cpu>=1.7.0",
]
all = [
    "oopstracker[dev,api,faiss]",
]

[project.urls]
Homepage = "https://github.com/evocoder/oopstracker"
Documentation = "https://oopstracker.readthedocs.io/"
Repository = "https://github.com/evocoder/oopstracker"
Issues = "https://github.com/evocoder/oopstracker/issues"

[project.scripts]
oopstracker = "oopstracker.cli:main"

[tool.hatch.version]
path = "src/oopstracker/__init__.py"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/README.md",
    "/LICENSE",
]

[tool.hatch.build.targets.wheel]
packages = ["src/oopstracker"]

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=src/oopstracker --cov-report=term-missing --cov-report=html"

[tool.coverage.run]
source = ["src/oopstracker"]
omit = ["*/tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[dependency-groups]
dev = [
    "black>=24.8.0",
    "flake8>=7.1.2",
    "httpx>=0.28.1",
    "isort>=5.13.2",
    "mypy>=1.14.1",
    "pip-licenses>=4.5.1",
    "pytest>=8.3.5",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=5.0.0",
]
